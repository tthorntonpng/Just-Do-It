/* === Full style.css â€” copy & paste this entire file === */

/* Import a clean UI font (Poppins) */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;600;800;900&display=swap');

:root{
  --bg: #000;
  --card: #111;
  --muted: #ccc;
  --pink: #ff69b4;
  --pink-hover: #ff85c1;
  --white: #ffffff;
}

/* === Global reset / layout === */
* { box-sizing: border-box; }
html,body { height: 100%; }
body {
  margin: 0;
  background: var(--bg);
  color: var(--white);
  font-family: 'Poppins', sans-serif;
  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding-top: 36px;
  perspective: 900px; /* helps header 3D feel */
}

/* === Main container / card === */
.container {
  width: 92%;
  max-width: 420px;
  background: var(--card);
  padding: 26px;
  border-radius: 12px;
  box-shadow: 0 12px 40px rgba(255,105,180,0.06);
  text-align: center;
}

/* === Header: bold, blocky, layered 3D effect (final) === */
h1 {
  font-size: 3.2rem;            /* tuned down so it fits inline */
  font-weight: 900;
  text-transform: uppercase;
  letter-spacing: 2px;
  color: var(--white);         /* keep header white */
  margin: 0 0 18px 0;
  display: inline-block;       /* prevent wrapping */
  white-space: nowrap;         /* force single line */
  transform-style: preserve-3d;
  /* stacked layered shadows to simulate blocky 3D extrusion */
  text-shadow:
    1px 1px 0 #ff69b4,
    2px 2px 0 #ff69b4,
    3px 3px 0 #ff69b4,
    4px 4px 0 #ff69b4,
    5px 5px 0 #ff69b4,
    6px 6px 0 #ff69b4,
    7px 7px 0 #ff69b4,
    8px 8px 0 #ff69b4,
    9px 9px 0 #ff69b4,
    10px 10px 12px rgba(255,105,180,0.85),
    0 0 20px rgba(255,105,180,0.6);
  animation: headerTilt 12s linear infinite;
}

/* small tilt rotation (keeps depth and avoids full spin) */
@keyframes headerTilt {
  0%   { transform: rotateY(0deg); }
  50%  { transform: rotateY(15deg); }
  100% { transform: rotateY(0deg); }
}

/* === Filter buttons (categories) === */
.filter-container {
  margin-bottom: 14px;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 8px;
}

.filter {
  background: transparent;
  border: 1px solid var(--white);
  color: var(--white);
  padding: 6px 12px;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 800;    /* bolder category text as requested */
  font-size: 0.9rem;
  transition: background 0.18s ease, color 0.18s ease, transform 0.12s ease;
}

.filter:hover { transform: translateY(-2px); }
.filter.active, .filter:active {
  background: var(--pink);
  color: #000;
}

/* === Input row === */
.input-container {
  display: flex;
  gap: 8px;
  margin-bottom: 14px;
  align-items: center;
}

#taskInput {
  flex: 1;
  padding: 8px 10px;
  border-radius: 8px;
  border: 1px solid var(--white);
  background: #0f0f0f;
  color: var(--white);
  outline: none;
  font-size: 0.95rem;
}

#categorySelect {
  padding: 8px;
  border-radius: 8px;
  border: 1px solid var(--white);
  background: #0f0f0f;
  color: var(--white);
  font-weight: 700;
}

/* Add button (pink) */
#addTaskBtn {
  padding: 8px 12px;
  border-radius: 8px;
  border: none;
  background: var(--pink);
  color: #000;
  font-weight: 800;
  cursor: pointer;
  transition: background 0.18s ease, transform 0.12s ease;
}
#addTaskBtn:hover { background: var(--pink-hover); transform: translateY(-2px); }

/* === Task list === */
#taskList { list-style: none; padding: 0; margin: 0; }

/* Each task row: container that can reveal delete */
.task {
  position: relative;
  display: flex;
  align-items: center;
  gap: 12px;
  justify-content: space-between;
  background: #151515;
  border: 1px solid rgba(255,255,255,0.06);
  padding: 10px 12px;
  margin-bottom: 10px;
  border-radius: 8px;
  overflow: hidden;
  transition: transform 0.22s ease, opacity 0.22s ease;
}

/* inner text area that moves left when swiped */
.task .task-text {
  flex: 1;
  text-align: left;
  font-weight: 600;
  transform: translateX(0);
  transition: transform 0.22s ease;
  word-break: break-word;
}

/* completed state */
.task.completed .task-text {
  text-decoration: line-through;
  opacity: 0.6;
  font-weight: 600;
}

/* delete button: hidden off-canvas by default */
.delete-btn {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 92px;
  background: var(--pink);
  color: #000;
  border: none;
  font-weight: 900;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 10px;
  border-top-right-radius: 8px;
  border-bottom-right-radius: 8px;
  transform: translateX(100%);   /* hidden */
  transition: transform 0.22s ease;
  cursor: pointer;
}

/* when task has class 'swiped' reveal delete */
.task.swiped .task-text { transform: translateX(-92px); }
.task.swiped .delete-btn { transform: translateX(0); }

/* quick remove animation when confirmed */
.task.removing {
  transform: translateX(-120%);
  opacity: 0;
  transition: transform 0.28s ease, opacity 0.18s ease;
}

/* small screens: shrink header so it fits */
@media (max-width: 420px) {
  .container { width: 94%; padding: 20px; }
  h1 { font-size: 2.6rem; letter-spacing: 1.5px; }
  .delete-btn { width: 76px; }
  .task.swiped .task-text { transform: translateX(-76px); }
}

/* accessibility focus outlines */
button:focus, select:focus, input:focus {
  outline: 2px solid rgba(255,105,180,0.25);
  outline-offset: 2px;
}
